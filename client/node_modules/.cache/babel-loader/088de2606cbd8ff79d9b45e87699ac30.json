{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATAN\\\\darelist\\\\client\\\\src\\\\player\\\\username.jsx\";\n//react libraries\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './../index.css';\nimport PropTypes from 'prop-types'; //redux\n\nimport { connect } from 'react-redux';\nimport { getPlayers } from '../actions/playerActions'; //bootstrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Username extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.player.name\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getPlayers();\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.handleSubmit(event);\n    event.preventDefault();\n  }\n\n  handleKeypress(event) {\n    if (event.key === \"Enter\") {\n      event.target.blur();\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onKeyDown: this.handleKeypress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Player\",\n      id: \"username\",\n      value: this.props.player.name,\n      onChange: this.handleChange,\n      onBlur: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUsername.propTypes = {\n  getPlayers: PropTypes.func.isRequired,\n  player: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  player: state.player\n});\n\nexport default connect(mapStateToProps, {\n  getPlayers\n})(Username);","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/src/player/username.jsx"],"names":["React","Component","ReactDOM","PropTypes","connect","getPlayers","Username","constructor","props","state","value","player","name","handleChange","bind","handleSubmit","handleKeypress","componentDidMount","event","setState","target","preventDefault","key","blur","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAO,sCAAP;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MAAX,CAAkBC;AADd,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDG,EAAAA,iBAAiB,GAAE;AACjB,SAAKT,KAAL,CAAWH,UAAX;AACD;;AAEDQ,EAAAA,YAAY,CAACK,KAAD,EAAO;AACjB,SAAKC,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAEQ,KAAK,CAACE,MAAN,CAAaV;AAArB,KAAd;AACD;;AAEDK,EAAAA,YAAY,CAACG,KAAD,EAAO;AACjB,SAAKV,KAAL,CAAWO,YAAX,CAAwBG,KAAxB;AACAA,IAAAA,KAAK,CAACG,cAAN;AACD;;AAEDL,EAAAA,cAAc,CAACE,KAAD,EAAO;AACnB,QAAGA,KAAK,CAACI,GAAN,KAAc,OAAjB,EAAyB;AACvBJ,MAAAA,KAAK,CAACE,MAAN,CAAaG,IAAb;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAmC,MAAA,SAAS,EAAE,KAAKC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,MAAX,CAAkBC,IAJ3B;AAKE,MAAA,QAAQ,EAAE,KAAKC,YALjB;AAME,MAAA,MAAM,EAAE,KAAKE,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AA7C6B;;AAgDhCT,QAAQ,CAACmB,SAAT,GAAqB;AACnBpB,EAAAA,UAAU,EAAEF,SAAS,CAACuB,IAAV,CAAeC,UADR;AAEnBhB,EAAAA,MAAM,EAAER,SAAS,CAACyB,MAAV,CAAiBD;AAFN,CAArB;;AAKA,MAAME,eAAe,GAAIpB,KAAD,KAAY;AAClCE,EAAAA,MAAM,EAAEF,KAAK,CAACE;AADoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["//react libraries\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './../index.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { getPlayers } from '../actions/playerActions'\r\n\r\n//bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nclass Username extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.player.name\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleKeypress = this.handleKeypress.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getPlayers();\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event){\r\n    this.props.handleSubmit(event);\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleKeypress(event){\r\n    if(event.key === \"Enter\"){\r\n      event.target.blur();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form onSubmit={this.handleSubmit} onKeyDown={this.handleKeypress}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Player\"\r\n          id=\"username\"\r\n          value={this.props.player.name}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleSubmit}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nUsername.propTypes = {\r\n  getPlayers: PropTypes.func.isRequired,\r\n  player: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  player: state.player\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPlayers })(Username);\r\n"]},"metadata":{},"sourceType":"module"}