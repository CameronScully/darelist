{"ast":null,"code":"/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    oid = require('../types/objectid'),\n    utils = require('../utils'),\n    Document;\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\n\nfunction ObjectId(key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\n\n\nObjectId.schemaName = 'ObjectId';\n/*!\n * Inherits from SchemaType.\n */\n\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function (turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  return value instanceof oid;\n};\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\n\nObjectId.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n    if (value === null || value === undefined) {\n      return value;\n    } // lazy load\n\n\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    } // setting a populated path\n\n\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    } // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n\n\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n\n    if (!doc.$__.populated || !doc.$__.populated[path] || !doc.$__.populated[path].options || !doc.$__.populated[path].options.options || !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof oid) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n\n    if (value._id.toString instanceof Function) {\n      try {\n        return new oid(value._id.toString());\n      } catch (e) {}\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return new oid(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n/*!\n * ignore\n */\n\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function ($conditional, val) {\n  var handler;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');\n    }\n\n    return handler.call(this, val);\n  }\n\n  return this.cast($conditional);\n};\n/*!\n * ignore\n */\n\n\nfunction defaultId() {\n  return new oid();\n}\n\nfunction resetId(v) {\n  this.$__._id = null;\n  return v;\n}\n/*!\n * Module exports.\n */\n\n\nmodule.exports = ObjectId;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mongoose/lib/schema/objectid.js"],"names":["SchemaType","require","CastError","oid","utils","Document","ObjectId","key","options","call","schemaName","prototype","Object","create","constructor","auto","turnOn","default","defaultId","set","resetId","checkRequired","value","doc","_isRef","cast","init","undefined","$__","wasPopulated","Buffer","isBuffer","isObject","path","$__fullPath","owner","ownerDocument","pop","populated","ret","lean","model","_id","toString","Function","e","err","handleSingle","val","$conditionalHandlers","$gt","$gte","$lt","$lte","castForQuery","$conditional","handler","arguments","length","Error","v","module","exports"],"mappings":"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","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    oid = require('../types/objectid'),\n    utils = require('../utils'),\n    Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return value instanceof oid;\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n    if (!doc.$__.populated ||\n        !doc.$__.populated[path] ||\n        !doc.$__.populated[path].options ||\n        !doc.$__.populated[path].options.options ||\n        !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof oid) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      try {\n        return new oid(value._id.toString());\n      } catch (e) {\n      }\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return new oid(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');\n    }\n    return handler.call(this, val);\n  }\n  return this.cast($conditional);\n};\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\nfunction resetId(v) {\n  this.$__._id = null;\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"]},"metadata":{},"sourceType":"script"}