{"ast":null,"code":"/*!\n * Module requirements\n */\nvar MongooseError = require('../error.js');\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\n\nfunction ValidationError(instance) {\n  this.errors = {};\n\n  if (instance && instance.constructor.name === 'model') {\n    MongooseError.call(this, instance.constructor.modelName + ' validation failed');\n  } else {\n    MongooseError.call(this, 'Validation failed');\n  }\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.name = 'ValidationError';\n\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function () {\n  var ret = this.name + ': ';\n  var msgs = [];\n  Object.keys(this.errors || {}).forEach(function (key) {\n    if (this === this.errors[key]) {\n      return;\n    }\n\n    msgs.push(String(this.errors[key]));\n  }, this);\n  return ret + msgs.join(', ');\n};\n/*!\n * Module exports\n */\n\n\nmodule.exports = exports = ValidationError;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mongoose/lib/error/validation.js"],"names":["MongooseError","require","ValidationError","instance","errors","constructor","name","call","modelName","Error","captureStackTrace","stack","prototype","Object","create","toString","ret","msgs","keys","forEach","key","push","String","join","module","exports"],"mappings":"AAAA;;;AAIA,IAAIA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAA3B;AAEA;;;;;;;;;AAQA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,OAAKC,MAAL,GAAc,EAAd;;AACA,MAAID,QAAQ,IAAIA,QAAQ,CAACE,WAAT,CAAqBC,IAArB,KAA8B,OAA9C,EAAuD;AACrDN,IAAAA,aAAa,CAACO,IAAd,CAAmB,IAAnB,EAAyBJ,QAAQ,CAACE,WAAT,CAAqBG,SAArB,GAAiC,oBAA1D;AACD,GAFD,MAEO;AACLR,IAAAA,aAAa,CAACO,IAAd,CAAmB,IAAnB,EAAyB,mBAAzB;AACD;;AACD,MAAIE,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKL,IAAL,GAAY,iBAAZ;;AACA,MAAIH,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CAACC,MAAT,GAAkB,KAAKA,MAAvB;AACD;AACF;AAED;;;;;AAIAF,eAAe,CAACU,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACY,SAA5B,CAA5B;AACAV,eAAe,CAACU,SAAhB,CAA0BP,WAA1B,GAAwCL,aAAxC;AAGA;;;;AAIAE,eAAe,CAACU,SAAhB,CAA0BG,QAA1B,GAAqC,YAAW;AAC9C,MAAIC,GAAG,GAAG,KAAKV,IAAL,GAAY,IAAtB;AACA,MAAIW,IAAI,GAAG,EAAX;AAEAJ,EAAAA,MAAM,CAACK,IAAP,CAAY,KAAKd,MAAL,IAAe,EAA3B,EAA+Be,OAA/B,CAAuC,UAASC,GAAT,EAAc;AACnD,QAAI,SAAS,KAAKhB,MAAL,CAAYgB,GAAZ,CAAb,EAA+B;AAC7B;AACD;;AACDH,IAAAA,IAAI,CAACI,IAAL,CAAUC,MAAM,CAAC,KAAKlB,MAAL,CAAYgB,GAAZ,CAAD,CAAhB;AACD,GALD,EAKG,IALH;AAOA,SAAOJ,GAAG,GAAGC,IAAI,CAACM,IAAL,CAAU,IAAV,CAAb;AACD,CAZD;AAcA;;;;;AAIAC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGvB,eAA3B","sourcesContent":["/*!\n * Module requirements\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\nfunction ValidationError(instance) {\n  this.errors = {};\n  if (instance && instance.constructor.name === 'model') {\n    MongooseError.call(this, instance.constructor.modelName + ' validation failed');\n  } else {\n    MongooseError.call(this, 'Validation failed');\n  }\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.name = 'ValidationError';\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n\n\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function() {\n  var ret = this.name + ': ';\n  var msgs = [];\n\n  Object.keys(this.errors || {}).forEach(function(key) {\n    if (this === this.errors[key]) {\n      return;\n    }\n    msgs.push(String(this.errors[key]));\n  }, this);\n\n  return ret + msgs.join(', ');\n};\n\n/*!\n * Module exports\n */\n\nmodule.exports = exports = ValidationError;\n"]},"metadata":{},"sourceType":"script"}