{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SATAN\\\\darelist\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_PLAYER, GET_PLAYERS, DELETE_PLAYERS, DARE_PLAYERS, RESET_PLAYERS, UPDATE_USERNAME } from '../actions/types.js';\nconst player = {\n  id: 0,\n  name: \"\",\n  multiplier: 0,\n  dares: []\n};\nconst initialState = {\n  players: [player]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PLAYERS:\n      return _objectSpread({}, state);\n\n    case DELETE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: []\n      });\n\n    case ADD_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players, player]\n      });\n\n    case DARE_PLAYERS:\n      return {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: player.dares.concat({\n              text: \"new dare\"\n            })\n          };\n          return newPlayer;\n        })\n      };\n\n    case RESET_PLAYERS:\n      return {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: []\n          };\n          return newPlayer;\n        })\n      };\n\n    case UPDATE_USERNAME:\n      return {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: action.payload,\n            multiplier: player.multiplier,\n            dares: player.dares\n          };\n          return newPlayer;\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/src/reducers/playerReducer.js"],"names":["ADD_PLAYER","GET_PLAYERS","DELETE_PLAYERS","DARE_PLAYERS","RESET_PLAYERS","UPDATE_USERNAME","player","id","name","multiplier","dares","initialState","players","state","action","type","map","newPlayer","concat","text","payload"],"mappings":";AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,eANF,QAOQ,qBAPR;AASA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,CADS;AAEbC,EAAAA,IAAI,EAAE,EAFO;AAGbC,EAAAA,UAAU,EAAE,CAHC;AAIbC,EAAAA,KAAK,EAAE;AAJM,CAAf;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CAAEN,MAAF;AADU,CAArB;AAIA,eAAe,UAASO,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,WAAL;AACE,+BACKY,KADL;;AAGF,SAAKX,cAAL;AACE,+BACKW,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKZ,UAAL;AACE,+BACKa,KADL;AAEED,QAAAA,OAAO,EAAE,CAAC,GAAGC,KAAK,CAACD,OAAV,EAAmBN,MAAnB;AAFX;;AAIF,SAAKH,YAAL;AACE,aAAO;AACLS,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcI,GAAd,CAAmBV,MAAD,IAAY;AACrC,gBAAMW,SAAS,GAAG;AAChBV,YAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,YAAAA,IAAI,EAAEF,MAAM,CAACE,IAFG;AAGhBC,YAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,YAAAA,KAAK,EAAEJ,MAAM,CAACI,KAAP,CAAaQ,MAAb,CAAoB;AAACC,cAAAA,IAAI,EAAE;AAAP,aAApB;AAJS,WAAlB;AAMA,iBAAOF,SAAP;AACD,SARQ;AADJ,OAAP;;AAWF,SAAKb,aAAL;AACE,aAAO;AACLQ,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcI,GAAd,CAAmBV,MAAD,IAAY;AACrC,gBAAMW,SAAS,GAAG;AAChBV,YAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,YAAAA,IAAI,EAAEF,MAAM,CAACE,IAFG;AAGhBC,YAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,YAAAA,KAAK,EAAE;AAJS,WAAlB;AAMA,iBAAOO,SAAP;AACD,SARQ;AADJ,OAAP;;AAWF,SAAKZ,eAAL;AACE,aAAO;AACLO,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcI,GAAd,CAAmBV,MAAD,IAAY;AACrC,gBAAMW,SAAS,GAAG;AAChBV,YAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,YAAAA,IAAI,EAAEM,MAAM,CAACM,OAFG;AAGhBX,YAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,YAAAA,KAAK,EAAEJ,MAAM,CAACI;AAJE,WAAlB;AAMA,iBAAOO,SAAP;AACD,SARQ;AADJ,OAAP;;AAWF;AACE,aAAOJ,KAAP;AApDJ;AAsDD","sourcesContent":["import {\r\n  ADD_PLAYER,\r\n  GET_PLAYERS,\r\n  DELETE_PLAYERS,\r\n  DARE_PLAYERS,\r\n  RESET_PLAYERS,\r\n  UPDATE_USERNAME\r\n } from '../actions/types.js';\r\n\r\nconst player = {\r\n  id: 0,\r\n  name: \"\",\r\n  multiplier: 0,\r\n  dares: []\r\n}\r\n\r\nconst initialState = {\r\n  players: [ player ]\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_PLAYERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: []\r\n      };\r\n    case ADD_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: [...state.players, player]\r\n      };\r\n    case DARE_PLAYERS:\r\n      return {\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: player.dares.concat({text: \"new dare\"})\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case RESET_PLAYERS:\r\n      return {\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: []\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: action.payload,\r\n            multiplier: player.multiplier,\r\n            dares: player.dares\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}