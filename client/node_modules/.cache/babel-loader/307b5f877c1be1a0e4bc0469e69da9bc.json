{"ast":null,"code":"/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     var mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * As you might have noticed, error messages support basic templating\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static messages\n * @receiver MongooseError\n * @api public\n */\nvar msg = module.exports = exports = {};\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mongoose/lib/error/messages.js"],"names":["msg","module","exports","general","default","required","Number","min","max","Date","String","enum","match","minlength","maxlength"],"mappings":"AACA;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIA,GAAG,GAAGC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG,EAArC;AAEAF,GAAG,CAACG,OAAJ,GAAc,EAAd;AACAH,GAAG,CAACG,OAAJ,CAAYC,OAAZ,GAAsB,yDAAtB;AACAJ,GAAG,CAACG,OAAJ,CAAYE,QAAZ,GAAuB,4BAAvB;AAEAL,GAAG,CAACM,MAAJ,GAAa,EAAb;AACAN,GAAG,CAACM,MAAJ,CAAWC,GAAX,GAAiB,qEAAjB;AACAP,GAAG,CAACM,MAAJ,CAAWE,GAAX,GAAiB,qEAAjB;AAEAR,GAAG,CAACS,IAAJ,GAAW,EAAX;AACAT,GAAG,CAACS,IAAJ,CAASF,GAAT,GAAe,kEAAf;AACAP,GAAG,CAACS,IAAJ,CAASD,GAAT,GAAe,iEAAf;AAEAR,GAAG,CAACU,MAAJ,GAAa,EAAb;AACAV,GAAG,CAACU,MAAJ,CAAWC,IAAX,GAAkB,wDAAlB;AACAX,GAAG,CAACU,MAAJ,CAAWE,KAAX,GAAmB,qCAAnB;AACAZ,GAAG,CAACU,MAAJ,CAAWG,SAAX,GAAuB,qFAAvB;AACAb,GAAG,CAACU,MAAJ,CAAWI,SAAX,GAAuB,oFAAvB","sourcesContent":["\n/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     var mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * As you might have noticed, error messages support basic templating\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static messages\n * @receiver MongooseError\n * @api public\n */\n\nvar msg = module.exports = exports = {};\n\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\n\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\n\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\n\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';\n"]},"metadata":{},"sourceType":"script"}