{"ast":null,"code":"/**\n * MongooseError constructor\n *\n * @param {String} msg Error message\n * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n */\nfunction MongooseError(msg) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.message = msg;\n  this.name = 'MongooseError';\n}\n/*!\n * Inherits from Error.\n */\n\n\nMongooseError.prototype = Object.create(Error.prototype);\nMongooseError.prototype.constructor = Error;\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseError;\n/**\n * The default built-in validator error messages.\n *\n * @see Error.messages #error_messages_MongooseError-messages\n * @api public\n */\n\nMongooseError.messages = require('./error/messages'); // backward compat\n\nMongooseError.Messages = MongooseError.messages;\n/*!\n * Expose subclasses\n */\n\nMongooseError.CastError = require('./error/cast');\nMongooseError.ValidationError = require('./error/validation');\nMongooseError.ValidatorError = require('./error/validator');\nMongooseError.VersionError = require('./error/version');\nMongooseError.OverwriteModelError = require('./error/overwriteModel');\nMongooseError.MissingSchemaError = require('./error/missingSchema');\nMongooseError.DivergentArrayError = require('./error/divergentArray');","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mongoose/lib/error.js"],"names":["MongooseError","msg","Error","call","captureStackTrace","stack","message","name","prototype","Object","create","constructor","module","exports","messages","require","Messages","CastError","ValidationError","ValidatorError","VersionError","OverwriteModelError","MissingSchemaError","DivergentArrayError"],"mappings":"AACA;;;;;;AAOA,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AAC1BC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;;AACA,MAAID,KAAK,CAACE,iBAAV,EAA6B;AAC3BF,IAAAA,KAAK,CAACE,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIH,KAAJ,GAAYG,KAAzB;AACD;;AACD,OAAKC,OAAL,GAAeL,GAAf;AACA,OAAKM,IAAL,GAAY,eAAZ;AACD;AAED;;;;;AAIAP,aAAa,CAACQ,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAcR,KAAK,CAACM,SAApB,CAA1B;AACAR,aAAa,CAACQ,SAAd,CAAwBG,WAAxB,GAAsCT,KAAtC;AAEA;;;;AAIAU,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGb,aAA3B;AAEA;;;;;;;AAOAA,aAAa,CAACc,QAAd,GAAyBC,OAAO,CAAC,kBAAD,CAAhC,C,CAEA;;AACAf,aAAa,CAACgB,QAAd,GAAyBhB,aAAa,CAACc,QAAvC;AAEA;;;;AAIAd,aAAa,CAACiB,SAAd,GAA0BF,OAAO,CAAC,cAAD,CAAjC;AACAf,aAAa,CAACkB,eAAd,GAAgCH,OAAO,CAAC,oBAAD,CAAvC;AACAf,aAAa,CAACmB,cAAd,GAA+BJ,OAAO,CAAC,mBAAD,CAAtC;AACAf,aAAa,CAACoB,YAAd,GAA6BL,OAAO,CAAC,iBAAD,CAApC;AACAf,aAAa,CAACqB,mBAAd,GAAoCN,OAAO,CAAC,wBAAD,CAA3C;AACAf,aAAa,CAACsB,kBAAd,GAAmCP,OAAO,CAAC,uBAAD,CAA1C;AACAf,aAAa,CAACuB,mBAAd,GAAoCR,OAAO,CAAC,wBAAD,CAA3C","sourcesContent":["\n/**\n * MongooseError constructor\n *\n * @param {String} msg Error message\n * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n */\n\nfunction MongooseError(msg) {\n  Error.call(this);\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.message = msg;\n  this.name = 'MongooseError';\n}\n\n/*!\n * Inherits from Error.\n */\n\nMongooseError.prototype = Object.create(Error.prototype);\nMongooseError.prototype.constructor = Error;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseError;\n\n/**\n * The default built-in validator error messages.\n *\n * @see Error.messages #error_messages_MongooseError-messages\n * @api public\n */\n\nMongooseError.messages = require('./error/messages');\n\n// backward compat\nMongooseError.Messages = MongooseError.messages;\n\n/*!\n * Expose subclasses\n */\n\nMongooseError.CastError = require('./error/cast');\nMongooseError.ValidationError = require('./error/validation');\nMongooseError.ValidatorError = require('./error/validator');\nMongooseError.VersionError = require('./error/version');\nMongooseError.OverwriteModelError = require('./error/overwriteModel');\nMongooseError.MissingSchemaError = require('./error/missingSchema');\nMongooseError.DivergentArrayError = require('./error/divergentArray');\n"]},"metadata":{},"sourceType":"script"}