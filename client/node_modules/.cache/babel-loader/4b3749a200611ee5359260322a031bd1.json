{"ast":null,"code":"/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if (!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\n;\n/**\n * @ignore\n * @api private\n */\n\nDBRef.prototype.toJSON = function () {\n  return {\n    '$ref': this.namespace,\n    '$id': this.oid,\n    '$db': this.db == null ? '' : this.db\n  };\n};\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/bson/lib/bson/db_ref.js"],"names":["DBRef","namespace","oid","db","_bsontype","prototype","toJSON","module","exports"],"mappings":"AAAA;;;;;;;;;AASA,SAASA,KAAT,CAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,EAA/B,EAAmC;AACjC,MAAG,EAAE,gBAAgBH,KAAlB,CAAH,EAA6B,OAAO,IAAIA,KAAJ,CAAUC,SAAV,EAAqBC,GAArB,EAA0BC,EAA1B,CAAP;AAE7B,OAAKC,SAAL,GAAiB,OAAjB;AACA,OAAKH,SAAL,GAAiBA,SAAjB;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,EAAL,GAAUA,EAAV;AACD;;AAAA;AAED;;;;;AAIAH,KAAK,CAACK,SAAN,CAAgBC,MAAhB,GAAyB,YAAW;AAClC,SAAO;AACL,YAAO,KAAKL,SADP;AAEL,WAAM,KAAKC,GAFN;AAGL,WAAM,KAAKC,EAAL,IAAW,IAAX,GAAkB,EAAlB,GAAuB,KAAKA;AAH7B,GAAP;AAKD,CAND;;AAQAI,MAAM,CAACC,OAAP,GAAiBR,KAAjB;AACAO,MAAM,CAACC,OAAP,CAAeR,KAAf,GAAuBA,KAAvB","sourcesContent":["/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if(!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n  \n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n};\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;"]},"metadata":{},"sourceType":"script"}