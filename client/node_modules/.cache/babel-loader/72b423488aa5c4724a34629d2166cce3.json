{"ast":null,"code":"\"use strict\";\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n    readIEEE754 = require('../float_parser').readIEEE754,\n    Long = require('../long').Long,\n    Double = require('../double').Double,\n    Timestamp = require('../timestamp').Timestamp,\n    ObjectID = require('../objectid').ObjectID,\n    Symbol = require('../symbol').Symbol,\n    BSONRegExp = require('../regexp').BSONRegExp,\n    Code = require('../code').Code,\n    Decimal128 = require('../decimal128'),\n    MinKey = require('../min_key').MinKey,\n    MaxKey = require('../max_key').MaxKey,\n    DBRef = require('../db_ref').DBRef,\n    Binary = require('../binary').Binary; // To ensure that 0.4 of node works correctly\n\n\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n  var totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    } // Calculate size\n\n\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n};\n/**\n * @ignore\n * @api private\n */\n\n\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n\n    case 'undefined':\n      if (isArray || !ignoreUndefined) return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n\n    case 'object':\n      if (value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length;\n      } else if (value instanceof Long || value instanceof Double || value instanceof Timestamp || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] == 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] == 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n        }\n      } else if (value instanceof Binary || value['_bsontype'] == 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1);\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] == 'Symbol') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n      } else if (value instanceof DBRef || value['_bsontype'] == 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          '$ref': value.namespace,\n          '$id': value.oid\n        }; // Add db reference if it exists\n\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n      } else if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else if (value instanceof BSONRegExp || value['_bsontype'] == 'BSONRegExp') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1 + Buffer.byteLength(value.options, 'utf8') + 1;\n      } else {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n      }\n\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else if (serializeFunctions) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1;\n        }\n      }\n\n  }\n\n  return 0;\n}\n\nvar BSON = {}; // BSON MAX VALUES\n\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000; // JS MAX PRECISE VALUES\n\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\n\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/bson/lib/bson/parser/calculate_size.js"],"names":["writeIEEE754","require","readIEEE754","Long","Double","Timestamp","ObjectID","Symbol","BSONRegExp","Code","Decimal128","MinKey","MaxKey","DBRef","Binary","isDate","d","Object","prototype","toString","call","calculateObjectSize","object","serializeFunctions","ignoreUndefined","totalLength","Array","isArray","i","length","calculateElement","toBSON","key","name","value","Buffer","byteLength","Math","floor","BSON","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","Date","isBuffer","scope","keys","code","sub_type","SUBTYPE_BYTE_ARRAY","position","ordered_values","namespace","oid","db","RegExp","source","global","ignoreCase","multiline","pattern","options","String","module","exports"],"mappings":"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","sourcesContent":["\"use strict\"\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754\n\t, readIEEE754 = require('../float_parser').readIEEE754\n\t, Long = require('../long').Long\n  , Double = require('../double').Double\n  , Timestamp = require('../timestamp').Timestamp\n  , ObjectID = require('../objectid').ObjectID\n  , Symbol = require('../symbol').Symbol\n  , BSONRegExp = require('../regexp').BSONRegExp\n  , Code = require('../code').Code\n\t, Decimal128 = require('../decimal128')\n  , MinKey = require('../min_key').MinKey\n  , MaxKey = require('../max_key').MaxKey\n  , DBRef = require('../db_ref').DBRef\n  , Binary = require('../binary').Binary;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n}\n\nvar calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n  var totalLength = (4 + 1);\n\n  if(Array.isArray(object)) {\n    for(var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined)\n    }\n  } else {\n\t\t// If we have toBSON defined, override the current object\n\t\tif(object.toBSON) {\n\t\t\tobject = object.toBSON();\n\t\t}\n\n\t\t// Calculate size\n    for(var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined)\n    }\n  }\n\n  return totalLength;\n}\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n\t// If we have toBSON defined, override the current object\n  if(value && value.toBSON){\n    value = value.toBSON();\n  }\n\n  switch(typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) { // 32 bit\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n        }\n      } else {  // 64 bit\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if(isArray || !ignoreUndefined) return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);\n      return 0;\n    case 'boolean':\n      return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 1);\n    case 'object':\n      if(value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);\n      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (12 + 1);\n      } else if(value instanceof Date || isDate(value)) {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 4 + 1) + value.length;\n      } else if(value instanceof Long || value instanceof Double || value instanceof Timestamp\n          || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n\t\t\t} else if(value instanceof Decimal128 || value['_bsontype'] == 'Decimal128') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (16 + 1);\n      } else if(value instanceof Code || value['_bsontype'] == 'Code') {\n        // Calculate size depending on the availability of a scope\n        if(value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n        }\n      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {\n        // Check what kind of subtype we have\n        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1);\n        }\n      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n            '$ref': value.namespace\n          , '$id' : value.oid\n        };\n\n        // Add db reference if it exists\n        if(null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1\n            + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else if(value instanceof BSONRegExp || value['_bsontype'] == 'BSONRegExp') {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1\n            + Buffer.byteLength(value.options, 'utf8') + 1\n      } else {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1\n          + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else {\n        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else if(serializeFunctions) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1;\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n"]},"metadata":{},"sourceType":"script"}