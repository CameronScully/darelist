{"ast":null,"code":"'use strict';\n/**\n * Module dependencies\n */\n\nvar Collection = require('./collection');\n\nvar utils = require('../utils');\n\nfunction NodeCollection(col) {\n  this.collection = col;\n  this.collectionName = col.collectionName;\n}\n/**\n * inherit from collection base class\n */\n\n\nutils.inherits(NodeCollection, Collection);\n/**\n * find(match, options, function(err, docs))\n */\n\nNodeCollection.prototype.find = function (match, options, cb) {\n  this.collection.find(match, options, function (err, cursor) {\n    if (err) return cb(err);\n    cursor.toArray(cb);\n  });\n};\n/**\n * findOne(match, options, function(err, doc))\n */\n\n\nNodeCollection.prototype.findOne = function (match, options, cb) {\n  this.collection.findOne(match, options, cb);\n};\n/**\n * count(match, options, function(err, count))\n */\n\n\nNodeCollection.prototype.count = function (match, options, cb) {\n  this.collection.count(match, options, cb);\n};\n/**\n * distinct(prop, match, options, function(err, count))\n */\n\n\nNodeCollection.prototype.distinct = function (prop, match, options, cb) {\n  this.collection.distinct(prop, match, options, cb);\n};\n/**\n * update(match, update, options, function(err[, result]))\n */\n\n\nNodeCollection.prototype.update = function (match, update, options, cb) {\n  this.collection.update(match, update, options, cb);\n};\n/**\n * remove(match, options, function(err[, result])\n */\n\n\nNodeCollection.prototype.remove = function (match, options, cb) {\n  this.collection.remove(match, options, cb);\n};\n/**\n * findAndModify(match, update, options, function(err, doc))\n */\n\n\nNodeCollection.prototype.findAndModify = function (match, update, options, cb) {\n  var sort = Array.isArray(options.sort) ? options.sort : [];\n  this.collection.findAndModify(match, sort, update, options, cb);\n};\n/**\n * var stream = findStream(match, findOptions, streamOptions)\n */\n\n\nNodeCollection.prototype.findStream = function (match, findOptions, streamOptions) {\n  return this.collection.find(match, findOptions);\n};\n/**\n * var cursor = findCursor(match, findOptions)\n */\n\n\nNodeCollection.prototype.findCursor = function (match, findOptions) {\n  return this.collection.find(match, findOptions);\n};\n/**\n * aggregation(operators..., function(err, doc))\n * TODO\n */\n\n/**\n * Expose\n */\n\n\nmodule.exports = exports = NodeCollection;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mquery/lib/collection/node.js"],"names":["Collection","require","utils","NodeCollection","col","collection","collectionName","inherits","prototype","find","match","options","cb","err","cursor","toArray","findOne","count","distinct","prop","update","remove","findAndModify","sort","Array","isArray","findStream","findOptions","streamOptions","findCursor","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Module dependencies\n */\n\nvar Collection = require('./collection');\nvar utils = require('../utils');\n\nfunction NodeCollection (col) {\n  this.collection = col;\n  this.collectionName = col.collectionName;\n}\n\n/**\n * inherit from collection base class\n */\n\nutils.inherits(NodeCollection, Collection);\n\n/**\n * find(match, options, function(err, docs))\n */\n\nNodeCollection.prototype.find = function (match, options, cb) {\n  this.collection.find(match, options, function (err, cursor) {\n    if (err) return cb(err);\n\n    cursor.toArray(cb);\n  });\n}\n\n/**\n * findOne(match, options, function(err, doc))\n */\n\nNodeCollection.prototype.findOne = function (match, options, cb) {\n  this.collection.findOne(match, options, cb);\n}\n\n/**\n * count(match, options, function(err, count))\n */\n\nNodeCollection.prototype.count = function (match, options, cb) {\n  this.collection.count(match, options, cb);\n}\n\n/**\n * distinct(prop, match, options, function(err, count))\n */\n\nNodeCollection.prototype.distinct  = function (prop, match, options, cb) {\n  this.collection.distinct(prop, match, options, cb);\n}\n\n/**\n * update(match, update, options, function(err[, result]))\n */\n\nNodeCollection.prototype.update = function (match, update, options, cb) {\n  this.collection.update(match, update, options, cb);\n}\n\n/**\n * remove(match, options, function(err[, result])\n */\n\nNodeCollection.prototype.remove = function (match, options, cb) {\n  this.collection.remove(match, options, cb);\n}\n\n/**\n * findAndModify(match, update, options, function(err, doc))\n */\n\nNodeCollection.prototype.findAndModify = function (match, update, options, cb) {\n  var sort = Array.isArray(options.sort) ? options.sort : [];\n  this.collection.findAndModify(match, sort, update, options, cb);\n}\n\n/**\n * var stream = findStream(match, findOptions, streamOptions)\n */\n\nNodeCollection.prototype.findStream = function(match, findOptions, streamOptions) {\n  return this.collection.find(match, findOptions);\n}\n\n/**\n * var cursor = findCursor(match, findOptions)\n */\n\nNodeCollection.prototype.findCursor = function(match, findOptions) {\n  return this.collection.find(match, findOptions);\n}\n\n/**\n * aggregation(operators..., function(err, doc))\n * TODO\n */\n\n/**\n * Expose\n */\n\nmodule.exports = exports = NodeCollection;\n\n"]},"metadata":{},"sourceType":"script"}