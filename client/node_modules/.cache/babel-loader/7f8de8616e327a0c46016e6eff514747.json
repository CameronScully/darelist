{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SATAN\\\\darelist\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_PLAYER, GET_PLAYERS, DELETE_PLAYERS, DARE_PLAYERS, RESET_PLAYERS, UPDATE_USERNAME, DARE_PLAYER, RESET_PLAYER, DELETE_PLAYER, PENALISE_PLAYER } from '../actions/types.js';\nconst initialState = {\n  players: [{\n    id: 0,\n    name: \"\",\n    multiplier: 0,\n    dares: [],\n    penalties: []\n  }],\n  playerCount: 1\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PLAYERS:\n      return _objectSpread({}, state);\n\n    case DELETE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: []\n      });\n\n    case ADD_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players, {\n          id: state.playerCount,\n          name: \"\",\n          multiplier: 0,\n          dares: [],\n          penalties: []\n        }],\n        playerCount: state.playerCount + 1\n      });\n\n    case DARE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: player.dares.concat({\n              text: \"a dare for everyone\"\n            }),\n            penalties: player.penalties\n          };\n          return newPlayer;\n        })\n      });\n\n    case RESET_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: [],\n            penalties: []\n          };\n          return newPlayer;\n        })\n      });\n\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload.id) {\n            const newPlayer = {\n              id: player.id,\n              name: action.payload.value,\n              multiplier: player.multiplier,\n              dares: player.dares,\n              penalties: player.penalties\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    case DARE_PLAYER:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload.id) {\n            const newPlayer = {\n              id: player.id,\n              name: player.name,\n              multiplier: player.multiplier,\n              dares: [...player.dares, action.payload.dare]\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    case PENALISE_PLAYER:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload.id) {\n            const newPlayer = {\n              id: player.id,\n              name: player.name,\n              multiplier: player.multiplier,\n              dares: player.dares,\n              penalties: [...player.penalties, action.payload.penalty]\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    case RESET_PLAYER:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload) {\n            const newPlayer = {\n              id: player.id,\n              name: player.name,\n              multiplier: player.multiplier,\n              dares: [],\n              penalties: []\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    case DELETE_PLAYER:\n      return _objectSpread({}, state, {\n        players: state.players.filter(player => player.id != action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/src/reducers/playerReducer.js"],"names":["ADD_PLAYER","GET_PLAYERS","DELETE_PLAYERS","DARE_PLAYERS","RESET_PLAYERS","UPDATE_USERNAME","DARE_PLAYER","RESET_PLAYER","DELETE_PLAYER","PENALISE_PLAYER","initialState","players","id","name","multiplier","dares","penalties","playerCount","state","action","type","map","player","newPlayer","concat","text","payload","value","dare","penalty","filter"],"mappings":"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","sourcesContent":["import {\r\n  ADD_PLAYER,\r\n  GET_PLAYERS,\r\n  DELETE_PLAYERS,\r\n  DARE_PLAYERS,\r\n  RESET_PLAYERS,\r\n  UPDATE_USERNAME,\r\n  DARE_PLAYER,\r\n  RESET_PLAYER,\r\n  DELETE_PLAYER,\r\n  PENALISE_PLAYER\r\n } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n  players: [{\r\n    id: 0,\r\n    name: \"\",\r\n    multiplier: 0,\r\n    dares: [],\r\n    penalties: []\r\n  }],\r\n  playerCount: 1\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_PLAYERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: []\r\n      };\r\n    case ADD_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: [...state.players, {\r\n          id: state.playerCount,\r\n          name: \"\",\r\n          multiplier: 0,\r\n          dares: [],\r\n          penalties: []\r\n        }],\r\n        playerCount: state.playerCount + 1\r\n      };\r\n    case DARE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: player.dares.concat({text: \"a dare for everyone\"}),\r\n            penalties: player.penalties\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case RESET_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: [],\r\n            penalties: []\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload.id){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: action.payload.value,\r\n              multiplier: player.multiplier,\r\n              dares: player.dares,\r\n              penalties: player.penalties\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    case DARE_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload.id){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: player.name,\r\n              multiplier: player.multiplier,\r\n              dares: [...player.dares, action.payload.dare]\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    case PENALISE_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload.id){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: player.name,\r\n              multiplier: player.multiplier,\r\n              dares: player.dares,\r\n              penalties: [...player.penalties, action.payload.penalty]\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    case RESET_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: player.name,\r\n              multiplier: player.multiplier,\r\n              dares: [],\r\n              penalties: []\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    case DELETE_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: state.players.filter(player => player.id != action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}