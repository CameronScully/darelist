{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SATAN\\\\darelist\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_PLAYER, GET_PLAYERS, DELETE_PLAYERS, DARE_PLAYERS, RESET_PLAYERS, UPDATE_USERNAME } from '../actions/types.js';\nconst player = {\n  id: 0,\n  name: \"\",\n  multiplier: 0,\n  dares: []\n};\nconst initialState = {\n  players: [{\n    id: 0,\n    name: \"\",\n    multiplier: 0,\n    dares: []\n  }],\n  playerCount: 1\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PLAYERS:\n      return _objectSpread({}, state);\n\n    case DELETE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: []\n      });\n\n    case ADD_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players, {\n          id: 0,\n          name: \"\",\n          multiplier: 0,\n          dares: []\n        }]\n      });\n\n    case DARE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: player.dares.concat({\n              text: \"new dare\"\n            })\n          };\n          return newPlayer;\n        })\n      });\n\n    case RESET_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: []\n          };\n          return newPlayer;\n        })\n      });\n\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload.id) {\n            const newPlayer = {\n              id: player.id,\n              name: action.payload.value,\n              multiplier: player.multiplier,\n              dares: player.dares\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/src/reducers/playerReducer.js"],"names":["ADD_PLAYER","GET_PLAYERS","DELETE_PLAYERS","DARE_PLAYERS","RESET_PLAYERS","UPDATE_USERNAME","player","id","name","multiplier","dares","initialState","players","playerCount","state","action","type","map","newPlayer","concat","text","payload","value"],"mappings":";AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,eANF,QAOQ,qBAPR;AASA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,CADS;AAEbC,EAAAA,IAAI,EAAE,EAFO;AAGbC,EAAAA,UAAU,EAAE,CAHC;AAIbC,EAAAA,KAAK,EAAE;AAJM,CAAf;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CAAC;AACRL,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,IAAI,EAAE,EAFE;AAGRC,IAAAA,UAAU,EAAE,CAHJ;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAAD,CADU;AAOnBG,EAAAA,WAAW,EAAE;AAPM,CAArB;AAUA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKf,WAAL;AACE,+BACKa,KADL;;AAGF,SAAKZ,cAAL;AACE,+BACKY,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKZ,UAAL;AACE,+BACKc,KADL;AAEEF,QAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmB;AAC1BL,UAAAA,EAAE,EAAE,CADsB;AAE1BC,UAAAA,IAAI,EAAE,EAFoB;AAG1BC,UAAAA,UAAU,EAAE,CAHc;AAI1BC,UAAAA,KAAK,EAAE;AAJmB,SAAnB;AAFX;;AASF,SAAKP,YAAL;AACE,+BACKW,KADL;AAEEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,GAAd,CAAmBX,MAAD,IAAY;AACrC,gBAAMY,SAAS,GAAG;AAChBX,YAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,YAAAA,IAAI,EAAEF,MAAM,CAACE,IAFG;AAGhBC,YAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,YAAAA,KAAK,EAAEJ,MAAM,CAACI,KAAP,CAAaS,MAAb,CAAoB;AAACC,cAAAA,IAAI,EAAE;AAAP,aAApB;AAJS,WAAlB;AAMA,iBAAOF,SAAP;AACD,SARQ;AAFX;;AAYF,SAAKd,aAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,GAAd,CAAmBX,MAAD,IAAY;AACrC,gBAAMY,SAAS,GAAG;AAChBX,YAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,YAAAA,IAAI,EAAEF,MAAM,CAACE,IAFG;AAGhBC,YAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,YAAAA,KAAK,EAAE;AAJS,WAAlB;AAMA,iBAAOQ,SAAP;AACD,SARQ;AAFX;;AAYF,SAAKb,eAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,GAAd,CAAmBX,MAAD,IAAY;AACrC,cAAGA,MAAM,CAACC,EAAP,IAAaQ,MAAM,CAACM,OAAP,CAAed,EAA/B,EAAkC;AAChC,kBAAMW,SAAS,GAAG;AAChBX,cAAAA,EAAE,EAAED,MAAM,CAACC,EADK;AAEhBC,cAAAA,IAAI,EAAEO,MAAM,CAACM,OAAP,CAAeC,KAFL;AAGhBb,cAAAA,UAAU,EAAEH,MAAM,CAACG,UAHH;AAIhBC,cAAAA,KAAK,EAAEJ,MAAM,CAACI;AAJE,aAAlB;AAMA,mBAAOQ,SAAP;AACD,WARD,MAQO;AACL,mBAAOZ,MAAP;AACD;AACF,SAZQ;AAFX;;AAgBF;AACE,aAAOQ,KAAP;AAhEJ;AAkED","sourcesContent":["import {\r\n  ADD_PLAYER,\r\n  GET_PLAYERS,\r\n  DELETE_PLAYERS,\r\n  DARE_PLAYERS,\r\n  RESET_PLAYERS,\r\n  UPDATE_USERNAME\r\n } from '../actions/types.js';\r\n\r\nconst player = {\r\n  id: 0,\r\n  name: \"\",\r\n  multiplier: 0,\r\n  dares: []\r\n}\r\n\r\nconst initialState = {\r\n  players: [{\r\n    id: 0,\r\n    name: \"\",\r\n    multiplier: 0,\r\n    dares: []\r\n  }],\r\n  playerCount: 1\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_PLAYERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: []\r\n      };\r\n    case ADD_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: [...state.players, {\r\n          id: 0,\r\n          name: \"\",\r\n          multiplier: 0,\r\n          dares: []\r\n        }]\r\n      };\r\n    case DARE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: player.dares.concat({text: \"new dare\"})\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case RESET_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: []\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload.id){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: action.payload.value,\r\n              multiplier: player.multiplier,\r\n              dares: player.dares\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}