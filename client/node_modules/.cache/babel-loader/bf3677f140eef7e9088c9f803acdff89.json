{"ast":null,"code":"/*!\n * Module dependencies.\n */\nvar MongooseError = require('../error.js');\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction ObjectExpectedError(path, val) {\n  MongooseError.call(this, 'Tried to set nested object field `' + path + '` to primitive value `' + val + '` and strict mode is set to throw.');\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.name = 'ObjectExpectedError';\n  this.path = path;\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nObjectExpectedError.prototype = Object.create(MongooseError.prototype);\nObjectExpectedError.prototype.constructor = MongooseError;\nmodule.exports = ObjectExpectedError;","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mongoose/lib/error/objectExpected.js"],"names":["MongooseError","require","ObjectExpectedError","path","val","call","Error","captureStackTrace","stack","name","prototype","Object","create","constructor","module","exports"],"mappings":"AAAA;;;AAIA,IAAIA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAA3B;AAEA;;;;;;;;;;AASA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,GAAnC,EAAwC;AACtCJ,EAAAA,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAyB,uCAAuCF,IAAvC,GACvB,wBADuB,GACIC,GADJ,GACU,oCADnC;;AAEA,MAAIE,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKC,IAAL,GAAY,qBAAZ;AACA,OAAKN,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;AAIAD,mBAAmB,CAACQ,SAApB,GAAgCC,MAAM,CAACC,MAAP,CAAcZ,aAAa,CAACU,SAA5B,CAAhC;AACAR,mBAAmB,CAACQ,SAApB,CAA8BG,WAA9B,GAA4Cb,aAA5C;AAEAc,MAAM,CAACC,OAAP,GAAiBb,mBAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction ObjectExpectedError(path, val) {\n  MongooseError.call(this, 'Tried to set nested object field `' + path +\n    '` to primitive value `' + val + '` and strict mode is set to throw.');\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.name = 'ObjectExpectedError';\n  this.path = path;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nObjectExpectedError.prototype = Object.create(MongooseError.prototype);\nObjectExpectedError.prototype.constructor = MongooseError;\n\nmodule.exports = ObjectExpectedError;\n"]},"metadata":{},"sourceType":"script"}