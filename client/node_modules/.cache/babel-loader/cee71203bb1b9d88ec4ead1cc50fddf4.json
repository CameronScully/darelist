{"ast":null,"code":"/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\nexports.get = function (path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n  var parts = 'string' == typeof path ? path.split('.') : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o,\n      part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n      return obj.map(function (item) {\n        return item ? exports.get(paths, item, special || lookup, map) : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special] ? obj[special][part] : obj[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n};\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\n\nexports.set = function (path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n  var parts = 'string' == typeof path ? path.split('.') : path;\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return; // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array.\n\n  var copy = _copying || /\\$/.test(path),\n      obj = o,\n      part;\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special] ? obj[special][part] : obj[part];\n    }\n\n    if (!obj) return;\n  } // process the last property of the path\n\n\n  part = parts[len]; // use the special property if exists\n\n  if (special && obj[special]) {\n    obj = obj[special];\n  } // set the value on the last branch\n\n\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n        item = obj[j];\n\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val[j]));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val[j]);\n          }\n        }\n      }\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        item = obj[j];\n\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n};\n/*!\n * Returns the value passed to it.\n */\n\n\nfunction K(v) {\n  return v;\n}","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/node_modules/mpath/lib/index.js"],"names":["exports","get","path","o","special","map","lookup","length","undefined","K","parts","split","Array","isArray","TypeError","obj","part","i","test","paths","slice","item","set","val","_copying","copy","len","j","v"],"mappings":"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","sourcesContent":["/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function (path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o\n    , part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      return obj.map(function (item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n}\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function (path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array.\n  var copy = _copying || /\\$/.test(path)\n    , obj = o\n    , part\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val[j]));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val[j]);\n          }\n        }\n      }\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K (v) {\n  return v;\n}\n"]},"metadata":{},"sourceType":"script"}