{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SATAN\\\\darelist\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_PLAYER, GET_PLAYERS, DELETE_PLAYERS, DARE_PLAYERS, RESET_PLAYERS, UPDATE_USERNAME } from '../actions/types.js';\nconst initialState = {\n  players: [{\n    id: 0,\n    name: \"\",\n    multiplier: 0,\n    dares: []\n  }],\n  playerCount: 1\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PLAYERS:\n      return _objectSpread({}, state);\n\n    case DELETE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: []\n      });\n\n    case ADD_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players, {\n          id: state.playerCount,\n          name: \"\",\n          multiplier: 0,\n          dares: []\n        }],\n        playerCount: state.playerCount + 1\n      });\n\n    case DARE_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: player.dares.concat({\n              text: \"new dare\"\n            })\n          };\n          return newPlayer;\n        })\n      });\n\n    case RESET_PLAYERS:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          const newPlayer = {\n            id: player.id,\n            name: player.name,\n            multiplier: player.multiplier,\n            dares: []\n          };\n          return newPlayer;\n        })\n      });\n\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload.id) {\n            const newPlayer = {\n              id: player.id,\n              name: action.payload.value,\n              multiplier: player.multiplier,\n              dares: player.dares\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    case DARE_PLAYER:\n      return _objectSpread({}, state, {\n        players: state.players.map(player => {\n          if (player.id == action.payload) {\n            const newPlayer = {\n              id: player.id,\n              name: player.name,\n              multiplier: player.multiplier,\n              dares: player.dares\n            };\n            return newPlayer;\n          } else {\n            return player;\n          }\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SATAN/darelist/client/src/reducers/playerReducer.js"],"names":["ADD_PLAYER","GET_PLAYERS","DELETE_PLAYERS","DARE_PLAYERS","RESET_PLAYERS","UPDATE_USERNAME","initialState","players","id","name","multiplier","dares","playerCount","state","action","type","map","player","newPlayer","concat","text","payload","value","DARE_PLAYER"],"mappings":"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","sourcesContent":["import {\r\n  ADD_PLAYER,\r\n  GET_PLAYERS,\r\n  DELETE_PLAYERS,\r\n  DARE_PLAYERS,\r\n  RESET_PLAYERS,\r\n  UPDATE_USERNAME\r\n } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n  players: [{\r\n    id: 0,\r\n    name: \"\",\r\n    multiplier: 0,\r\n    dares: []\r\n  }],\r\n  playerCount: 1\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_PLAYERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: []\r\n      };\r\n    case ADD_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: [...state.players, {\r\n          id: state.playerCount,\r\n          name: \"\",\r\n          multiplier: 0,\r\n          dares: []\r\n        }],\r\n        playerCount: state.playerCount + 1\r\n      };\r\n    case DARE_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: player.dares.concat({text: \"new dare\"})\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case RESET_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          const newPlayer = {\r\n            id: player.id,\r\n            name: player.name,\r\n            multiplier: player.multiplier,\r\n            dares: []\r\n          }\r\n          return newPlayer;\r\n        })\r\n      };\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload.id){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: action.payload.value,\r\n              multiplier: player.multiplier,\r\n              dares: player.dares\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    case DARE_PLAYER:\r\n      return {\r\n        ...state,\r\n        players: state.players.map((player) => {\r\n          if(player.id == action.payload){\r\n            const newPlayer = {\r\n              id: player.id,\r\n              name: player.name,\r\n              multiplier: player.multiplier,\r\n              dares: player.dares\r\n            }\r\n            return newPlayer;\r\n          } else {\r\n            return player;\r\n          }\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}